import{_ as e,c as i,o as s,a6 as a}from"./chunks/framework.8idlyvhX.js";const u=JSON.parse('{"title":"Adverbs","description":"","frontmatter":{},"headers":[],"relativePath":"adverbs.md","filePath":"adverbs.md","lastUpdated":null}'),t={name:"adverbs.md"},r=a('<h1 id="Adverbs" tabindex="-1">Adverbs <a class="header-anchor" href="#Adverbs" aria-label="Permalink to &quot;Adverbs {#Adverbs}&quot;">​</a></h1><p>Adverbs are functions that modify the behaviour of a function.</p><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="TidierIteration.compose" href="#TidierIteration.compose">#</a> <b><u>TidierIteration.compose</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">compose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create the composite function of the <code>args...</code>.</p><p><code>compose(f1, f2)(x)</code> is equal to <code>f2(f1(x))</code>.</p><p><a href="https://github.com/TidierOrg/TidierIteration.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="TidierIteration.compose_n" href="#TidierIteration.compose_n">#</a> <b><u>TidierIteration.compose_n</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">compose_n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compose the function <code>f</code> with itself <code>n</code> times.</p><p><a href="https://github.com/TidierOrg/TidierIteration.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="TidierIteration.negate" href="#TidierIteration.negate">#</a> <b><u>TidierIteration.negate</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">negate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f)</span></span></code></pre></div><p>Return a function which is the negation of <code>f</code>.</p><p><a href="https://github.com/TidierOrg/TidierIteration.jl" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="TidierIteration.possibly" href="#TidierIteration.possibly">#</a> <b><u>TidierIteration.possibly</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">possibly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, otherwise </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a modified version of the function <code>f</code> such that it returns <code>otherwise</code> when <code>f(x)</code> throws an error.</p><p><a href="https://github.com/TidierOrg/TidierIteration.jl" target="_blank" rel="noreferrer">source</a></p></div><br>',10),o=[r];function d(n,p,l,h,c,b){return s(),i("div",null,o)}const g=e(t,[["render",d]]);export{u as __pageData,g as default};
